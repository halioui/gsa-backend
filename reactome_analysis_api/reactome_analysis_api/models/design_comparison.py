# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from reactome_analysis_api.models.base_model_ import Model
from reactome_analysis_api import util


class DesignComparison(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, group1: str=None, group2: str=None):  # noqa: E501
        """DesignComparison - a model defined in Swagger

        :param group1: The group1 of this DesignComparison.  # noqa: E501
        :type group1: str
        :param group2: The group2 of this DesignComparison.  # noqa: E501
        :type group2: str
        """
        self.swagger_types = {
            'group1': str,
            'group2': str
        }

        self.attribute_map = {
            'group1': 'group1',
            'group2': 'group2'
        }

        self._group1 = group1
        self._group2 = group2

    @classmethod
    def from_dict(cls, dikt) -> 'DesignComparison':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Design_comparison of this DesignComparison.  # noqa: E501
        :rtype: DesignComparison
        """
        return util.deserialize_model(dikt, cls)

    @property
    def group1(self) -> str:
        """Gets the group1 of this DesignComparison.


        :return: The group1 of this DesignComparison.
        :rtype: str
        """
        return self._group1

    @group1.setter
    def group1(self, group1: str):
        """Sets the group1 of this DesignComparison.


        :param group1: The group1 of this DesignComparison.
        :type group1: str
        """
        if group1 is None:
            raise ValueError("Invalid value for `group1`, must not be `None`")  # noqa: E501

        self._group1 = group1

    @property
    def group2(self) -> str:
        """Gets the group2 of this DesignComparison.


        :return: The group2 of this DesignComparison.
        :rtype: str
        """
        return self._group2

    @group2.setter
    def group2(self, group2: str):
        """Sets the group2 of this DesignComparison.


        :param group2: The group2 of this DesignComparison.
        :type group2: str
        """
        if group2 is None:
            raise ValueError("Invalid value for `group2`, must not be `None`")  # noqa: E501

        self._group2 = group2
